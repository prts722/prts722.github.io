[{"content":" 复习了几天之前的知识，又加深研究了一下这四大天王，终于是搞懂了，其实分清楚以后就觉得不是很难了\n为了防止说错，部分内容引用教程语句\n","date":"2024-01-20T21:05:27+08:00","image":"https://prts722.github.io/p/python%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A02/%E5%B0%81%E9%9D%A2%E5%9B%BE_hu10746291476206030349.png","permalink":"https://prts722.github.io/p/python%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A02/","title":"Python基础学习2"},{"content":"小记 使用python前需要下载python和解释器并配置环境变量，下面简单提一下\n下载Python：访问官网 https://www.python.org/downloads/ 自己选择合适版本的Python安装包\n安装Python：运行安装包，记得勾选\u0026quot;Add Python to PATH\u0026quot;选项，这样可以在命令行中直接使用Python\n验证安装：打开命令行（Windows下为cmd，Mac/Linux下为终端），输入python \u0026ndash;version，如果显示Python版本号，说明安装成功\n选择IDE：推荐使用PyCharm或Visual Studio Code作为开发环境，这里我选择的是pycharm\nPython的基础语法及数据类型 2.1 标识符 第一个字符必须以字母（a-z, A-Z）或下划线_组成\n标识符的其他的部分由字母、数字和下划线组成\n标识符对大小写敏感，count 和 Count 是不同的标识符\n标识符对长度无硬性限制，但建议保持简洁（一般不超过 20 个字符）\n禁止使用保留关键字，如 if、for、class 等不能作为标识符\n合法标识符\n1 2 3 4 5 6 7 age = 22 user_name = \u0026#34;斯卡蒂\u0026#34; _total = 100 MAX_SIZE = 1024 calculate_area() StudentInfo __private_var 非法标识符\n1 2 3 4 5 2nd_place = \u0026#34;银灰\u0026#34; # 错误：以数字开头 user-name = \u0026#34;大亚当\u0026#34; # 错误：包含连字符 class = \u0026#34;class\u0026#34; # 错误：使用关键字 $price = 9.99 # 错误：包含特殊字符 for = \u0026#34;loop\u0026#34; # 错误：使用关键字 2.2 基本数据类型 常见的数据类型有以下几种：\nNumber（数字） String（字符串） bool（布尔类型） List（列表） Tuple（元组） Set（集合） Dictionary（字典） 其中数字类型支持int(整型),float(浮点型),bool(布尔型),complex(复数),字符串在使用中用引号\u0026quot; \u0026ldquo;包裹,布尔类型只有两个，为true和false\nList、Tuple、Set、Dictionary比较复杂，会专门写一篇学习记录（绝不是因为还在学习）\n运算符 3.1 算数运算符 尽量全记录下来方便后期查阅使用^^\n算数运算符有以下几种\n运算符 描述 实例 + 加 - 两个对象相加 假设a=10,b=11(下面通用)，a + b 输出结果 21 - 减 - 得到负数或是一个数减去另一个数 a - b 输出结果 -1 * 乘 - 两个数相乘或是返回一个被重复若干次的字符串 a * b 输出结果 110 / 除 - x 除以 y b / a 输出结果 1.1 % 取模 - 返回除法的余数 b % a 输出结果 1 ** 幂 - 返回x的y次幂 a**b 为10的11次方 // 取整除 - 往小的方向取整数 9//2结果为4 (+也可用于字符串之间的连接，和方法.jion()相似)\n3.2 比较运算符 比较运算符有以下几种(假设a为1，b为2)\n运算符 描述 实例 == 等于 - 比较对象是否相等 (a == b) 返回 False ！= 不等于 - 比较两个对象是否不相等 (a != b) 返回 True \u0026gt; 大于 - 返回x是否大于y (a \u0026gt; b) 返回 False \u0026lt; 小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。 (a \u0026lt; b) 返回 True \u0026gt;= 大于等于 - 返回x是否大于等于y。 (a \u0026gt;= b) 返回 False \u0026lt;= 小于等于 - 返回x是否小于等于y。 (a \u0026lt;= b) 返回 True (目前来说if判断中用到的多一点)\n3.3 位运算符 位运算符我查了一下，说是按照二进制来计算的，emmm反正会用就行，大致有以下几种(假设a=60，b=13)\n运算符 描述 实例 \u0026amp; 按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0 (a \u0026amp; b) 输出结果 12 | 按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1 (a | b) 输出结果 61 ^ 按位异或运算符：当两对应的二进位相异时，结果为1 (a ^ b) 输出结果 49 ~ 按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1 (~a ) 输出结果 -61 \u0026laquo; 左移动运算符：运算数的各二进位全部左移若干位，由\u0026rdquo;\u0026laquo;\u0026ldquo;右边的数指定移动的位数，高位丢弃，低位补0 a \u0026laquo; 2 输出结果 240 \u0026raquo; 右移动运算符：把\u0026rdquo;\u0026raquo;\u0026ldquo;左边的运算数的各二进位全部右移若干位，\u0026quot;\u0026raquo;\u0026ldquo;右边的数指定移动的位数 a \u0026raquo; 2 输出结果 15 3.4 逻辑运算符 与、或、非（假设a=10，b=20）\n运算符 逻辑表达式 描述 实例 and x and y \u0026ldquo;与\u0026rdquo; - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值 (a and b) 返回 20 or x or y \u0026ldquo;或\u0026rdquo; - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值 (a or b) 返回 10 not not x 布尔\u0026quot;非\u0026rdquo; - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True not(a and b) 返回 False 3.5 成员运算符and身份运算符 用的不多但是也用过\n运算符 描述 实例 in 如果在指定的序列中找到值返回 True，否则返回 False x 在 y 序列中 , 如果 x 在 y 序列中返回 True not in 如果在指定的序列中没有找到值返回 True，否则返回 False x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True is is 是判断两个标识符是不是引用自一个对象 x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False is not is not 是判断两个标识符是不是引用自不同对象 x is not y ， 类似 id(x) != id(y)。如果引用的不是同一个对象则返回结果 True，否则返回 False 字符串 字符串部分的知识点更多更杂，先记录几个经常用的 假设字符串a为ark，字符串b为nights\n操作符 描述 实例 + 字符串连接（对应的有个方法叫.jion（）也是用来连接字符串的,不过一般作用于列表和元组等） a+b = arknights（） * 重复输出字符串 a*2 输出结果:arkark [ : ] 截取字符串中的一部分，遵循左闭右开原则，例如str[0:2] 是不包含第 3 个字符的 b[1:4] 输出结果 igh % 格式字符串（和.format()一样） 见下面代码 格式化字符串%和.format相似\n% 形式 1 2 3 4 name = \u0026#39;Runoob\u0026#39; \u0026#39;Hello %s\u0026#39; % name 输出\u0026#39;Hello Runoob\u0026#39; .format()形式（f形式） 1 2 3 4 5 6 7 8 9 10 11 12 13 name = \u0026#39;Runoob\u0026#39; f\u0026#39;Hello {name}\u0026#39; # 替换变量 \u0026#39;Hello {}\u0026#39;.format(name) # 同上，上面的是简化写法 输出\u0026#39;Hello Runoob\u0026#39; f\u0026#39;{1+2}\u0026#39; # 使用表达式 输出\u0026#39;3\u0026#39; w = {\u0026#39;name\u0026#39;: \u0026#39;Runoob\u0026#39;, \u0026#39;url\u0026#39;: \u0026#39;www.runoob.com\u0026#39;} f\u0026#39;{w[\u0026#34;name\u0026#34;]}: {w[\u0026#34;url\u0026#34;]}\u0026#39; 输出\u0026#39;Runoob: www.runoob.com\u0026#39; ","date":"2024-01-17T15:02:17+08:00","image":"https://prts722.github.io/p/python%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A01/%E5%B0%81%E9%9D%A2%E5%9B%BE_hu2253557394020799285.png","permalink":"https://prts722.github.io/p/python%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A01/","title":"Python基础学习1"}]